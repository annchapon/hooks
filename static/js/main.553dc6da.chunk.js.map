{"version":3,"sources":["index.js"],"names":["App","useState","value","setValue","visible","setVisible","onClick","v","PlanetInfo","id","usePlanetInfo","request","initialState","useMemo","data","loading","error","dataState","setDataState","useEffect","cancelled","then","catch","useRequest","useCallback","fetch","res","json","getPlanet","name","ReactDOM","render","document","getElementById"],"mappings":"8IAGMA,EAAM,WACV,MAA4BC,mBAAS,GAArC,mBAAQC,EAAR,KAAeC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KAEA,OAAID,EAEA,gCACE,wBAAQE,QAAS,kBAAMH,GAAS,SAACI,GAAD,OAAOA,EAAI,MAA3C,eAGA,wBAAQD,QAAS,kBAAMD,GAAW,IAAlC,kBAGA,cAACG,EAAD,CAAYC,GAAIP,OAIb,wBAAQI,QAAS,kBAAMD,GAAW,IAAlC,mBAyCLK,EAAgB,SAACD,GAGrB,OAlCiB,SAACE,GAClB,IAAMC,EAAeC,mBAAQ,iBAAO,CAClCC,KAAM,KACNC,SAAS,EACTC,MAAO,QACL,IAEJ,EAAoCf,mBAASW,GAA7C,mBAAQK,EAAR,KAAmBC,EAAnB,KAqBA,OAnBAC,qBAAU,WACRD,EAAaN,GAEb,IAAIQ,GAAY,EAahB,OAXAT,IACGU,MAAK,SAAAP,GAAI,OAAKM,GAAaF,EAAa,CACvCJ,OACAC,SAAS,EACTC,MAAO,UAERM,OAAM,SAAAN,GAAK,OAAKI,GAAaF,EAAa,CACzCJ,KAAM,KACNC,SAAS,EACTC,aAEG,kBAAMI,GAAY,KACxB,CAACT,EAASC,IAENK,EAMAM,CAFSC,uBACd,kBAvCc,SAACf,GACjB,OAAOgB,MAAM,iCAAD,OAAkChB,IAC3CY,MAAK,SAAAK,GAAG,OAAIA,EAAIC,UAChBN,MAAK,SAAAP,GAAI,OAAIA,KAoCRc,CAAUnB,KAAK,CAAEA,MAmBrBD,EAAa,SAAC,GAAY,IAAVC,EAAS,EAATA,GACpB,EAAiCC,EAAcD,GAAvCK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OAFA,EAAuBC,MAGd,8BAAK,sDAGVD,EACK,8BAAK,6CAIZ,8BACE,qCAAQN,EAAG,uBAAX,gBACcK,EAAKe,WAKzBC,IAASC,OAAO,cAAC/B,EAAD,IAASgC,SAASC,eAAe,W","file":"static/js/main.553dc6da.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const [ value, setValue ] = useState(1);\n  const [ visible, setVisible ] = useState(true);\n\n  if (visible) {\n    return (\n      <div>\n        <button onClick={() => setValue((v) => v + 1)}>\n          +\n        </button>\n        <button onClick={() => setVisible(false)}>\n          Hide\n        </button>\n        <PlanetInfo id={value} />\n      </div>      \n    );\n  } else {\n    return <button onClick={() => setVisible(true)}>Show</button>\n  }\n};\n\nconst getPlanet = (id) => {\n  return fetch(`https://swapi.dev/api/planets/${id}`)\n    .then(res => res.json())\n    .then(data => data);  \n};\n\nconst useRequest = (request) => {\n  const initialState = useMemo(() => ({\n    data: null,\n    loading: true,\n    error: null\n  }), []);\n\n  const [ dataState, setDataState ] = useState(initialState);\n\n  useEffect(() => {\n    setDataState(initialState);\n\n    let cancelled = false;\n\n    request()\n      .then(data => !cancelled && setDataState({\n        data,\n        loading: false,\n        error: null\n      }))\n      .catch(error => !cancelled && setDataState({ // !cancelled = если эффект был отменен\n        data: null,\n        loading: false,\n        error      \n      }));\n    return () => cancelled = true;\n  }, [request, initialState]);\n\n  return dataState;  \n};\n\nconst usePlanetInfo = (id) => {\n  const request = useCallback(\n    () => getPlanet(id), [ id ]);\n  return useRequest(request);\n};\n\n/*const usePlanetInfo = (id) => {\n  const [ name, setName ] = useState(null);\n\n  useEffect(() => {\n    let cancelled = false;\n\n    fetch(`https://swapi.dev/api/planets/${id}`)\n      .then(res => res.json())\n      .then(data => !cancelled && setName(data.name));\n    return () => cancelled = true;\n  }, [id]);\n\n  return name;\n};*/\n\nconst PlanetInfo = ({ id }) => {\n  const { data, loading, error } = usePlanetInfo(id);\n\n  if (error) {\n    return <div><p>Something is wrong.</p></div>\n  }\n\n  if (loading) {\n    return <div><p>Loading...</p></div>\n  }  \n\n  return (\n    <div>\n      <p>ID: {id}<br />\n      Planet name: {data.name}</p>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}